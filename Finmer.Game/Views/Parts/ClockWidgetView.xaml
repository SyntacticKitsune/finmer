<UserControl
    x:Class="Finmer.Views.ClockWidgetView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:cv="clr-namespace:Finmer.Converters"
    xmlns:gp="clr-namespace:Finmer.Gameplay"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance gp:Player}">
    <UserControl.Resources>
        <cv:HourToClockAngleConverter x:Key="HourToClockAngleConverter" />
    </UserControl.Resources>
    <Canvas Width="150" Height="75">
        <!-- Arrow -->
        <Polygon
            Panel.ZIndex="2"
            Canvas.Top="-6"
            Canvas.Left="75"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Points="-6,0 0,8, 6,0"
            Fill="{StaticResource DepressedBrush}" />

        <!-- Rotating clock graphic -->
        <Grid Height="75">
            <Grid.OpacityMask>
                <ImageBrush
                    ImageSource="/Finmer;component/Resources/UI/ClockAlpha.png" />
            </Grid.OpacityMask>
            <Grid Height="150">
                <Grid.Clip>
                    <RectangleGeometry Rect="0, 0, 150, 75" />
                </Grid.Clip>
                <Image
                    Source="/Finmer;component/Resources/UI/Clock.png"
                    Width="150"
                    Height="150"
                    Stretch="Fill"
                    RenderTransformOrigin="0.5,0.5">
                    <Image.RenderTransform>
                        <RotateTransform Angle="{Binding TimeHourCumulative, Converter={StaticResource HourToClockAngleConverter}, Mode=OneTime}" />
                    </Image.RenderTransform>
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                        To="{Binding TimeHourCumulative, Converter={StaticResource HourToClockAngleConverter}, NotifyOnTargetUpdated=True, Mode=OneWay}"
                                        Duration="0:0:1.1">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </Grid>
        </Grid>
    </Canvas>
</UserControl>